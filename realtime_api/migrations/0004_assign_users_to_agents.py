# Generated by Django 4.2.7 on 2025-09-18 16:40

from django.db import migrations
from django.contrib.auth.models import User


def assign_users_to_agents(apps, schema_editor):
    """Assign existing agents to the first superuser"""
    AgentConfiguration = apps.get_model('realtime_api', 'AgentConfiguration')
    User = apps.get_model('auth', 'User')
    
    # Get the first superuser, or create a default admin user
    try:
        admin_user = User.objects.filter(is_superuser=True).first()
        if not admin_user:
            # Create a default admin user if none exists
            admin_user = User.objects.create_user(
                username='admin',
                email='admin@example.com',
                is_superuser=True,
                is_staff=True
            )
            admin_user.set_password('admin')
            admin_user.save()
        
        # Assign all agents with null user_id to the admin user
        agents_without_users = AgentConfiguration.objects.filter(user__isnull=True)
        for agent in agents_without_users:
            agent.user = admin_user
            agent.save()
            
        print(f"Assigned {agents_without_users.count()} agents to user: {admin_user.username}")
        
    except Exception as e:
        print(f"Error in migration: {e}")
        # Don't fail the migration, just log the error
        pass


def reverse_assign_users_to_agents(apps, schema_editor):
    """Reverse operation - set user_id back to null"""
    AgentConfiguration = apps.get_model('realtime_api', 'AgentConfiguration')
    # Set all user_id back to null (this might not work due to constraints)
    AgentConfiguration.objects.all().update(user_id=None)


class Migration(migrations.Migration):

    dependencies = [
        ('realtime_api', '0003_callsession_called_number_and_more'),
    ]

    operations = [
        migrations.RunPython(assign_users_to_agents, reverse_assign_users_to_agents),
    ]
