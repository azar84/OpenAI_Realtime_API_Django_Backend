# Generated by Django 4.2.7 on 2025-09-18 20:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('realtime_api', '0007_add_advanced_vad_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='InstructionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Template name (e.g., 'Sales Caller', 'Customer Support')", max_length=100)),
                ('description', models.TextField(blank=True, help_text='Brief description of what this template is for')),
                ('instructions', models.TextField(help_text='Template instructions with {name} placeholders')),
                ('category', models.CharField(choices=[('sales', 'Sales & Marketing'), ('support', 'Customer Support'), ('assistant', 'General Assistant'), ('custom', 'Custom')], default='custom', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.AlterField(
            model_name='agentconfiguration',
            name='instructions',
            field=models.TextField(blank=True, default='# Personality  \n\n## Name  \nYour name is **{name}**.  \n\n## Greeting  \nGreet the prospect warmly by saying: "Hi, this is {name} from HiQSense — did I catch you at a good time?"  \n\n## Identity  \nYou are a professional sales caller with experience in technology outreach. You are skilled at listening, asking questions, and guiding prospects naturally toward booking meetings.  \n\n## Task  \nYour job is to call prospects, introduce AI voice assistant services in short conversational chunks, keep the dialogue flowing with follow-up questions, answer questions using the **knowledge base tool**, and schedule demos using the **scheduling tool** when prospects are interested.  \n\n## Demeanor  \nBe confident, approachable, and curious. Keep the conversation light and engaging.  \n\n## Tone  \nSpeak in a friendly and conversational tone, like a peer who understands business challenges.  \n\n## Level of Enthusiasm  \nStay positive and lightly energetic. Show excitement, but never sound pushy.  \n\n## Level of Formality  \nMaintain a professional yet casual style — be polite and respectful, but not overly formal.  \n\n## Level of Emotion  \nBe warm and engaging, and sound genuinely interested in the prospect.  \n\n## Filler Words  \nUse light natural fillers like "you know" or "actually," but sparingly to keep speech realistic.  \n\n## Pacing  \nSpeak at a steady, medium pace. Use short statements, then pause to listen.  \n\n## Primary Language  \nEnglish  \n\n## Secondary Languages  \nArabic  \n\n\n# Instructions  \n\n- Always begin with your greeting and ask if it\'s a good time to talk.  \n- After permission is given, introduce the service in **one short sentence**.  \n- Immediately follow up with a simple, open-ended question to keep the conversation going.  \n- Listen carefully to the prospect\'s response before speaking again.  \n- Share information in **small chunks** — never explain everything at once.  \n- Use the **knowledge base tool** to answer questions about the company and services.  \n- Use the **scheduling tool** to book a demo when the prospect shows interest.  \n- Use the **reminder tool** when the prospect wants a call back at a later time.  \n- If the prospect declines, politely thank them for their time and close the conversation.  \n- Keep the interaction conversational, avoid long monologues, and adjust your tone to match the prospect.  \n- Always stay aware that you are equipped with tools (knowledge base, scheduling, reminders) and use them naturally when needed.'),
        ),
        migrations.AlterField(
            model_name='agentconfiguration',
            name='model',
            field=models.CharField(choices=[('gpt-4o-realtime-preview', 'gpt-4o-realtime-preview'), ('gpt-realtime-2025-08-28', 'gpt-realtime-2025-08-28'), ('gpt-realtime', 'gpt-realtime'), ('gpt-4o-realtime-preview-2025-06-03', 'gpt-4o-realtime-preview-2025-06-03'), ('gpt-4o-realtime-preview-2024-12-17', 'gpt-4o-realtime-preview-2024-12-17'), ('gpt-4o-realtime-preview-2024-10-01', 'gpt-4o-realtime-preview-2024-10-01'), ('gpt-4o-mini-realtime-preview-2024-12-17', 'gpt-4o-mini-realtime-preview-2024-12-17'), ('gpt-4o-mini-realtime-preview', 'gpt-4o-mini-realtime-preview')], default='gpt-realtime', help_text='Choose the OpenAI Realtime model for this agent', max_length=50),
        ),
        migrations.AlterField(
            model_name='agentconfiguration',
            name='temperature',
            field=models.FloatField(default=0.8, help_text='Temperature for response generation (0.6-1.2)'),
        ),
        migrations.AddField(
            model_name='agentconfiguration',
            name='instruction_template',
            field=models.ForeignKey(blank=True, help_text='Select a template for instructions (optional - will use custom instructions if not selected)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realtime_api.instructiontemplate'),
        ),
    ]
